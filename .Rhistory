class(z[[1]])
z1 <- z[[1]]
names(z11)
names(z1)
rownames(z1)
z1 <- as.data.frame(z1)
z1
names(z1)
z <- extract_areas("https://www2.cao.ie/app_stats/pdf/appstats01feb2004.pdf")
z
z[[1]]
class(z[[1]])
z[[1]][1]
z[[1]][1,]
z <- "https://www2.cao.ie/app_stats/pdf/appstats01feb2013.pdf"
z1 <- extract_tables(z)
z1
z <- "https://www2.cao.ie/app_stats/pdf/appstats01feb2012.pdf"
z1 <- extract_tables(z)
z1
z1[2, 3]
z1[[1][2, 3]]
z1[[1]][2, 3]
z1[[1]][2, 4]
z <- "https://www2.cao.ie/app_stats/pdf/appstats01feb2013.pdf"
z1 <- extract_tables(z)
z1[[1]][2, 4]
z <- "https://www2.cao.ie/app_stats/pdf/appstats01feb2012.pdf"
z1 <- extract_tables(z)
z1[[1]][2, 4]
z <- "https://www2.cao.ie/app_stats/pdf/appstats01feb2016.pdf"
z1 <- extract_tables(z)
z1[[1]][2, 4]
z1[[1]]
which(z1[[1]] == "Applicants-March")
which(z1[[1]][2,] == "Applicants-March")
row_index <- which(z1[[1]] == "Applicants-March")
column_index <- which(z1[[1]][row_index,] == "Applicants-March")
row_index <- which(z1[[1]] == "Applicants-March")
column_index <- which(z1[[1]][row_index,] == "Applicants-March")
z1[[1]][row_index, column_index+1]
z1[[1]][row_index, column_index+1] |>
str_remove_all(",") |>
as.numeric()
z <- "https://www2.cao.ie/app_stats/pdf/appstats01feb2017.pdf"
z1 <- extract_tables(z)
row_index <- which(z1[[1]] == "Applicants-March")
column_index <- which(z1[[1]][row_index,] == "Applicants-March")
z1[[1]][row_index, column_index+1] |>
str_remove_all(",") |>
as.numeric()
row_index
z1[[1]]
row_index <- which(z1[[1]] == "Applicants-March" | z1[[1]]== "Total Applicants")
row_index
row_index <- which(z1[[1]]== "Total Applicants")
row_index
z[[1]]
z1[[1]]
z1[[1]][4,1]
row_index <- which(z1[[1]] == "Applicants-March" | z1[[1]]== "Total Applications")
row_index
column_index <- which(z1[[1]][row_index,] == "Applicants-March" | z1[[1]][row_index,] == "Total Applications")
z1[[1]][row_index, column_index+1] |>
str_remove_all(",") |>
as.numeric()
z <- "https://www2.cao.ie/app_stats/pdf/appstats01feb2018.pdf"
z1 <- extract_tables(z)
row_index <- which(z1[[1]] == "Applicants-March" | z1[[1]] == "Total Applications")
column_index <- which(z1[[1]][row_index,] == "Applicants-March" | z1[[1]][row_index,] == "Total Applications")
z1[[1]][row_index, column_index+1] |>
str_remove_all(",") |>
as.numeric()
z[[1]]
z1[[1]]
z <- "https://www2.cao.ie/app_stats/pdf/appstats01feb2020.pdf"
z1 <- extract_tables(z)
row_index <- which(z1[[1]] == "Applicants-March" | z1[[1]] == "Total Applications")
column_index <- which(z1[[1]][row_index,] == "Applicants-March" | z1[[1]][row_index,] == "Total Applications")
z1[[1]][row_index, column_index+1] |>
str_remove_all(",") |>
as.numeric()
z <- "https://www2.cao.ie/app_stats/pdf/appstats01feb2021.pdf"
z1 <- extract_tables(z)
row_index <- which(z1[[1]] == "Applicants-March" | z1[[1]] == "Total Applications")
column_index <- which(z1[[1]][row_index,] == "Applicants-March" | z1[[1]][row_index,] == "Total Applications")
z1[[1]][row_index, column_index+1] |>
str_remove_all(",") |>
as.numeric()
z1[[1]]
z <- "https://www2.cao.ie/app_stats/pdf/appstats01feb2022.pdf"
z1 <- extract_tables(z)
row_index <- which(z1[[1]] == "Applicants-March" | z1[[1]] == "Total Applications")
column_index <- which(z1[[1]][row_index,] == "Applicants-March" | z1[[1]][row_index,] == "Total Applications")
z1[[1]][row_index, column_index+1] |>
str_remove_all(",") |>
as.numeric()
z <- "https://www.ipcc.ch/site/assets/uploads/2017/09/WG1AR5_AnnexII_FINAL.pdf"
z1 <- extract_tables(z)
z1
library(tidyverse)
library(ape)
library(Biostrings)
library(ggseqlogo)
library(rentrez)
library(seqinr)
ntd <- "Enterovirus[Organism]"
enterovirus_search <- entrez_search(db="nuccore", term=ntd, retmax=40)
enterovirus_seqs <- entrez_fetch(db="nuccore",
id=enterovirus_search$ids[c(2:9, 15:40)],
rettype="fasta")
write(enterovirus_seqs, "rexams/data/enterovirus/enterovirus-40.fasta", sep="\n")
enterovirus_seqinr_format <- read.fasta(file = "rexams/data/enterovirus/enterovirus-40.fasta",
seqtype = "DNA",
as.string = TRUE,
forceDNAtolower = FALSE)
z <- attr(enterovirus_seqinr_format, "name")
enterovirus_ape_format <- read.GenBank(z)
attr(enterovirus_ape_format, "species")
dna <- clustal(enterovirus_ape_format)
dna <- clustal(enterovirus_ape_format)
image(dna)
D <- dist.dna(dna, model = "TN93")
table.paint(as.data.frame(as.matrix(D)), cleg = 0, clabel.row = 0.5, clabel.col = 0.5)
library(ade4)
table.paint(as.data.frame(as.matrix(D)), cleg = 0, clabel.row = 0.5, clabel.col = 0.5)
tre <- nj(D)
tre <- njs(D)
class(D)
D
dna
?dist.dna
D <- dist.dna(dna)
D
D <- dist.dna(dna, model = "raw")
D
ref <- "EU203593"
z <- read.GenBank(ref, as.character = T)
z1 <- Biostrings::DNAString(z[[1]] %>% str_c(collapse = ""))
z1 <- Biostrings::DNAString(z[[1]] |> str_c(collapse = ""))
library(tidyverse)
library(tidyverse)
packageVersion("rlang")
install.packages("rlang")
install.packages("rlang")
packageVersion("rlang")
install.packages("rlang", force = T)
install.packages("rlang", force = T)
packageVersion("rlang")
install.packages("rlang")
library(tidyverse)
packageVersion("rlang")
library(tidyverse)
library(ape)
library(Biostrings)
library(ggseqlogo)
library(rentrez)
library(seqinr)
# Thu Apr 06 14:15:39 2023 ------------------------------
m_genitalium <- "NC_000908"
z <- read.GenBank(m_genitalium, as.character = T)
z1 <- Biostrings::DNAString(z[[1]] %>% str_c(collapse = ""))
ntd <- "H2N3"
h2n3_search <- entrez_search(db="nuccore", term=ntd, retmax=40)
h2n3_seqs <- entrez_fetch(db="nuccore",
id=h2n3_search$ids[1],
rettype="fasta")
h2n3_seqs
ref <- "EU203593"
z <- read.GenBank(ref, as.character = T)
z1 <- Biostrings::DNAString(z[[1]] |> str_c(collapse = ""))
translate(z1)
z[[1]][c(3:29)] %>%
str_c(collapse = "") %>%
DNAString() %>%
translate()
z[[1]][21492:25259] %>%
str_c(collapse = "") %>%
DNAString() %>%
translate()
z1 <- Biostrings::DNAString(z[[1]]
z1 <- Biostrings::DNAString(z[[1]] |> str_c(collapse = ""))
translate(z1)
?translate
Biostrings::translate(z1)
z[[1]][c(3:29)] %>%
str_c(collapse = "") %>%
DNAString() %>%
Biostrings::translate()
z[[1]][21492:25259] %>%
str_c(collapse = "") %>%
DNAString() %>%
Biostrings::translate()
data("cynipids")
z <- lapply(cynipids, function(x) str_c(x, collapse = ""))
str_sub(z$Diplolepis_rosae, start = 1, end = 1) <- "l"
ggseqlogo(z %>% toupper() %>% substr(30, 40), seq_type = "aa")
z1 <- strsplit(c(z[[3]], z[[4]]), split = "")
index <- z1[[1]] != z1[[2]]
z2 <- lapply(z, function(x) strsplit(x, "")[[1]][index])
ggseqlogo(z2 %>% toupper(), seq_type = "aa")
library(tidyquant)
install.packages("tidyquant")
library(tidyquant)
?tidyquant
?tq_get
tq_get_options()
tq_index_options()
tq_index()
tq_index("DOW")
tq_index("DOW",use_fallback = T)
?tq_index
tq_exchange("DOW")
tq_exchange("NYSE")
tq_index("DOW")
z <- .Last.value
z$symbol
?tq_get
tq_get(x = "IBM")
packageVersion("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
packageVersion("vctrs")
library(tidyquant)
tq_get(x = "IBM")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
library(tidyquant)
tq_get(x = "IBM")
tq_index("DOW")
stock_symbols <- tq_index("DOW") |> pull(symbol)
library(tidyverse)
stock_symbols <- tq_index("DOW") |> pull(symbol)
stock_symbols
stock_symbols <- stock_symbols |> sample(1)
stock_data <- tq_get(stock_symbols)
View(stock_data)
stock_symbol <- tq_index("DOW") |>
pull(symbol) |>
sample(1)
tq_index("DOW")
library(tidyverse)
library(tidyquant)
stock_market <- tq_index("DOW")
index <- sample(1:nrow(stock_symbol), 1)
stock_symbol <- stock_market$symbol[index]
stock_name <- stock_market$company[index]
index <- sample(1:nrow(stock_market), 1)
stock_symbol <- stock_market$symbol[index]
stock_name <- stock_market$company[index]
stock_name
stock_symbol
stock_data <- tq_get(stock_symbol)
View(stock_data)
stock_data |> ggplot(aes(date, close)) + geom_point()
stock_data |>
pull(close) |>
mean(na.rm = T) |>
signif(3)
View(stock_data)
glimpse(stock_data)
tail(stock_data)
seq(2013-01-02:2022-01-02)
seq("2013-01-02":"2022-01-02")
min(stock_data$date)
class(.Last.value)
seq(min(stock_data$date):max(stock_data$date), by = "years") |>
sample(1)
min(stock_data$date):max(stock_data$date)
seq(min(stock_data$date):max(stock_data$date), "years")
seq(from = min(stock_data$date) to = max(stock_data$date), "years")
seq(from = min(stock_data$date), to = max(stock_data$date), "years")
seq(from = min(stock_data$date), to = max(stock_data$date), "years") |>
sample(1)
seq(from = min(stock_data$date), to = max(stock_data$date), "years") |>
sample(1)
seq(from = min(stock_data$date), to = max(stock_data$date), "years") |>
sample(1)
seq(from = min(stock_data$date), to = max(stock_data$date), "years") |>
sample(1)
seq(from = min(stock_data$date), to = max(stock_data$date), "years") |>
sample(1)
seq(from = min(stock_data$date), to = max(stock_data$date), "years") |>
sample(1)
stock_data |> filter(date > start_date)
start_date <- seq(from = min(stock_data$date), to = max(stock_data$date), "years") |>
sample(1)
stock_data |> filter(date > start_date)
library(exams)
elearn_exam <- c("rexams/week-3/tidyquant.Rmd")
set.seed(42)
exams2moodle(elearn_exam, n = 2, name = "rexams")
exams2moodle(elearn_exam, n = 2, name = "rexams")
library(rnoaa)
install.packages("rnoaa")
library(rnoaa)
?rnoaa::ncdc_datasets
ncdc_datasets()
browseVignettes("rnoaa")
vignettes("rnoaa")
usethis::edit_r_profile()
options(noaakey = "QenEPThrcubzHrnKfxjumpGDKVICNYKb")
ncdc_datasets()
ncdc_locs(locationcategoryid='CITY', sortfield='name', sortorder='desc')
z <- .Last.value
z$data$name
?ncdc_locs
ncdc_locs(locationcategoryid='CITY', sortfield='name', sortorder='desc', limit = 1000)
ncdc_locs(locationcategoryid='ST', limit=52)
ncdc_locs(locationcategoryid='ST', limit=52)
usethis::edit_r_environ()
library(rnoaa)
ncdc_locs(locationcategoryid='CITY', sortfield='name', sortorder='desc')
rnoaa::ghcnd_countries()
z <- .Last.value
View(z)
ncdc_locs(locationcategoryid='COUNTRY', sortfield='name', sortorder='desc')
?rnoaa::ncdc_locs_cats
ncdc_locs_cats(datasetid='ANNUAL')
ncdc_locs(locationcategoryid='CNTRY', sortfield='name', sortorder='desc')
ncdc_locs(locationcategoryid='CNTRY', sortfield='name', sortorder='desc', limit = 1000)
ncdc_locs(locationcategoryid='CNTRY', sortfield='name', sortorder='desc', limit = 100)
?rnoaa::ghcnd_countries
?rnoaa::lcd
lcd(station = "01338099999", year = 2017)
View(.Last.value)
?rnoaa::ncdc_stations
ncdc_stations(locationid = "FIPS:EI")
ncdc_stations(datasetid='GHCND', locationid='FIPS:12017', stationid='GHCND:USC00084289')
lcd_columns()
lcd(station = "GHCND:EI000003980", year = 2017)
with_units <- ncdc(datasetid='GHCND', stationid='GHCND:EI000003980', datatypeid='PRCP', startdate = '2010-05-01', enddate = '2010-10-31', limit=500, add_units = TRUE)
head( with_units$data )
with_units <- ncdc(datasetid='GHCND', stationid='GHCND:EI000003980', datatypeid='daily-tmax-normal', startdate = '2010-05-01', enddate = '2010-10-31', limit=500, add_units = TRUE)
head( with_units$data )
with_units <- ncdc(datasetid='GHCND', stationid='GHCND:EI000003980', datatypeid='dly-tmax-normal', startdate = '2010-05-01', enddate = '2010-10-31', limit=500, add_units = TRUE)
head( with_units$data )
irish_stations <- ncdc_stations(locationid = "FIPS:EI")
irish_stations
irish_stations <- ncdc_stations(locationid = "FIPS:EI")$data
View(irish_stations)
index <- 1:nrow(irish_stations) |> sample(1)
ghcnd <- irish_stations$id[index]
station_name <- irish_stations$name[index]
ghcnd
seq(from = irish_stations$mindate[index],
to = irish_stations$mindate[index], "years")
irish_stations$mindate[index]
class(.Last.value)
irish_stations$mindate[index] |> as.Date()
class(.Last.value)
seq(from = irish_stations$mindate[index] |> as.Date(),
to = irish_stations$mindate[index] |> as.Date(),
"years")
seq(from = irish_stations$mindate[index] |> as.Date(),
to = irish_stations$maxdate[index] |> as.Date(),
"years")
start_date <- seq(from = irish_stations$mindate[index] |> as.Date(),
to = irish_stations$maxdate[index] |> as.Date(),
"years") |>
sample(1)
start_date
start_date+1
start_date+365
start_date+"year"
library(lubridate)
start_date <- seq(from = irish_stations$mindate[index] |> as.Date(),
to = irish_stations$maxdate[index] %m-% years(1) |> as.Date(),
"years") |>
sample(1)
seq(from = irish_stations$mindate[index] |> as.Date(),
to = irish_stations$maxdate[index] |> as.Date() %m-% years(1),
"years") |>
sample(1)
irish_stations$maxdate[index] |> as.Date() %m-% years(1)
irish_stations$maxdate[index] |> as.Date()
start_date <- seq(from = irish_stations$mindate[index] |> as.Date(),
to = irish_stations$maxdate[index] |> as.Date() %m-% years(1),
"years") |>
sample(1)
end_date <- start_date  %m+% years(1)
start_date
end_date
start_date <- seq(from = irish_stations$mindate[index] |> as.Date(),
to = irish_stations$maxdate[index] |> as.Date() %m-% years(1),
"years") |>
sample(1)
end_date <- start_date  %m+% years(1)
start_date
end_date
with_units <- ncdc(datasetid='GHCND',
stationid=ghcnd,
datatypeid='PRCP',
startdate = start_date,
enddate = end_date,
limit=500,
add_units = TRUE)
with_units
with_units <- ncdc(datasetid='GHCND',
stationid=ghcnd,
datatypeid='PRCP',
startdate = start_date,
enddate = end_date,
limit=500,
add_units = TRUE)$data
View(with_units)
solution <- with_units |>
pull(value) |>
mean(na.rm = T) |>
signif(3)
library(tidyverse)
solution <- with_units |>
pull(value) |>
mean(na.rm = T) |>
signif(3)
solution
?ncdc
library(exams)
elearn_exam <- c("rexams/week-3/noaa.Rmd")
set.seed(42)
exams2moodle(elearn_exam, n = 2, name = "rexams")
exams2moodle(elearn_exam, n = 2, name = "rexams")
library(tidyverse)
library(ape)
library(Biostrings)
library(tidyverse)
library(ape)
library(Biostrings)
library(ggseqlogo)
library(rentrez)
library(seqinr)
ntd <- "Enterovirus[Organism]"
enterovirus_search <- entrez_search(db="nuccore", term=ntd, retmax=40)
enterovirus_search
enterovirus_search[[1]]
enterovirus_search[[2]]
enterovirus_search[[3]]
enterovirus_search[[4]]
enterovirus_search[[5]]
enterovirus_search$ids[c(2:9, 15:40)]
enterovirus_search[[2]]
enterovirus_search[[1]]
enterovirus_seqs <- entrez_fetch(db="nuccore",
id=enterovirus_search$ids[c(2:9, 15:40)],
rettype="fasta")
enterovirus_seqs
enterovirus_seqs[1]
enterovirus_seqs[1] |> nchar()
enterovirus_seqs[1][1:100]
# Fri Apr 07 00:10:07 2023 ------------------------------
library(GEOquery)
eList <- getGEO("GSE788")
eList
class(eList)
length(eList)
names(eList)
eData <- eList[[1]]
eData
methods(class=class(eData))
assayData(eData)
fData(eData)
z=fData(eData)
View(z)
z1=pData(eData)
View(z1)
methods(class=class(eData))
z2=exprs(eData)
View(z2)
eList <- getGEO("GSE198033")
class(eList)
length(eList)
names(eList)
eData <- eList[[1]]
methods(class=class(eData))
z2=exprs(eData)
z1=pData(eData)
View(z1)
z=fData(eData)
View(z)
notes(eData)
View(z2)
eList <- getGEO("GSE215359")
class(eList)
length(eList)
names(eList)
eData <- eList[[1]]
eData
z=fData(eData)
z1=pData(eData)
View(z1)
library(tidyverse)
library(matlab)
begin <- 40001
end <- 50000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
numbers[isprime(numbers)==1 & between(numbers %% 1000, 000, 100)]
begin <- 40003
end <- 50000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 45003
end <- 46000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
eList
sampleNames(eList)
