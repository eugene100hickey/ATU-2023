library(dslabs)
dslabs::movielens
?dslabs
?dslabs::ds_theme_set
dslabs::brca
class(brca)
dslabs::admissions
dslabs::results_us_election_2016
dslabs::gapminder
dslabs::results_us_election_2016 |> class()
dslabs:: |> class()
dslabs::death_prob |> class()
dslabs::tissue_gene_expression |> class()
dslabs::tissue_gene_expression
base::T
data()
dslabs::murders |> class()
dslabs::movielens |> class()
dslabs::trump_tweets |> class()
dslabs::research_funding_rates |> class()
install.packages("biomod2")
starwars <- read_html("https://rvest.tidyverse.org/articles/starwars.html")
library(rvest)
starwars <- read_html("https://rvest.tidyverse.org/articles/starwars.html")
starwars
films <- starwars %>% html_elements("section")
films
year <- 2000:2022 |>
sample(1)
new_url <- glue::glue("https://www.imdb.com/search/title/?title_type=feature&year={year}-01-01,{year}-12-31")
year
new_url
read_html(new_url)
read_html(new_url) |> html_element(".runtime")
read_html(new_url) |> html_element(".runtime") |> html_table()
new_url
read_html(new_url) |> html_node(".runtime")
read_html(new_url) |> html_nodes(".runtime")
read_html(new_url) |> html_nodes(".runtime") |> html_text2()
?html_element
read_html(new_url) |> html_element("css")
read_html(new_url) |> html_elements("css")
html <- read_html("https://en.wikipedia.org/w/index.php?title=The_Lego_Movie&oldid=998422565")
html %>%
html_element(".tracklist") %>%
html_table()
html |> html_nodes(".tracklist")
html |> html_nodes(".tracklist") |>
html_table()
html <- read_html(new_url)
html %>%
html_element(".tracklist") %>%
html_table()
library(here)
library(tidyverse)
library(tabulizer)
here(system.file(tabulizer))
here(system.file("tabulizer"))
system.file("tabulizer")
here(system.file(package="tabulizer"))
here(system.file(package="tabulizer"), "examples")
here(system.file(package="tabulizer"), "examples", "data.pdf")
here(system.file(package="tabulizer"), "examples") |> list.files()
here(system.file(package="tabulizer"), "examples", "data.pdf") |> extract_tables(output = "data.frame")
here(system.file(package="tabulizer"), "examples", "data.pdf") |> extract_tables(output = "data.frame") |> pluck(1)
library(fishbase)
install.packages("fishbase")
library(rfishbase)
install.packages("rfishbase")
library(rfishbase)
?rfishbase::distribution
distribution(species_list(Genus='Labroides'))
?rfishbase::available_releases
available_releases()
?rfishbase::load_taxa
load_taxa()
library(rgbif)
?rgbif::occ_data
library(astrodatR)
install.packages("astrodatR")
library(astrodatR)
?astrodatR::SDSS_QSO
SDSS_QSO
SDSS_QSO
SDSS_QSO()
install.packages("askgpt")
library(askgpt)
askgpt("what does simple principle diffuse fine mean?")
askgpt("what does simple principle diffuse fine mean?")
askgpt("what does simple principle diffuse fine mean?")
askgpt("what does simple principle diffuse fine mean?")
askgpt("what does simple principle diffuse fine mean?")
askgpt("what does simple principle diffuse fine mean?")
library(tidyverse)
library(matlab)
library(words)
begin <- 23007
end <-24000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 32709
end <-32800
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 30729
end <-40000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |>
filter(word_length == 5)
z |> filter(str_detect(word, "rei.i"))
library(swirl)
swirl()
install_course("Manipulating_Data_with_dplyr")
install_course("Manipulating Data with dplyr")
install_course("Getting and Cleaning Data")
swirl()
swirl()
library(gapminder)
head(gapminder)
z <- "Historically women+ have been significantly underrepresented with regards to medical research (Merone, Tsey, Darren, Nagle, 2022). This is seen in both policies relating to women+ health, research in clinical trials but also the presentation and management of conditions in clinical settings (Merone, Tsey, Darren, Nagle, 2022)( Maucais-Jarvis, Merz et al., 2020). For example in 1977 the Food and Drug Administration in the US released policy guidlines for clinical trials in General Considerations for the clinical Evaluation of Drugs which was based on data that excluded all ‘’Women of Childbearing Potential’’ from phase 1 clinical trials, regardless if they were on birth control, single or if their husband had a vasectomy (U.S. FDA, 1977). It wasn’t until 1993 that the FDA revised its publication from 1977 allowing women+ to be included in all stages of clinical trials if it met certain criteria (U.S. FDA, 1993). This was done as there was a “growing concern that the drug development process does not produce adequate information about the effects of drugs on women’’(U.S. FDA, 1993).
In addition to the exclusion of women+ from clinical trials and health data collection processes, the presentation and prevalence of health conditions can vary according to gender ( Maucais-Jarvis, Merz et al., 2020) but this is not always considered in clinical management of female patients. For example, clinical evidence shows that women+ are half as likely to receive interventional medicine for coronary artery disease when compared to their male counterparts (Weisz, Gusmano, Rodwin, 2004).
Although there is clear evidence of exclusion and bias in women+ healthcare, one must first know where the deficiencies and bias lie within particular conditions to be able to appropriately address them. Machine learning has the potential to make a vast impact on women+ centered health by analysing health related data of various conditions, identifing these key defiencies and biases and addressing these key deficiencies to develop a more appropriate approach to the management of these conditions.
Research Aim: The aim of this research is to explore the deficiencies in the management of women+’s health conditions from presentation to diagnosis and treatment across the lifecycle and investigate issues of bias and exclusion.
Objectives: The first steps in this research will involve a qualitative study to explore the key deficiencies in the management of women+’s health with key experts in the areas of health (GP’s and Pharmacists) and health related policy makers. The data collected will be analysed using thematic analysis (Braun and Clarke, 2006) and the results will then directly inform subsequent data driven explorations in particular health conditions where deficiencies and biases have been identified."
nchar(z)
z <- "Historically women+ have been significantly underrepresented with regards to medical research (Merone, Tsey, Darren, Nagle, 2022). This is seen in both policies relating to women+ health, research in clinical trials but also the presentation and management of conditions in clinical settings (Merone, Tsey, Darren, Nagle, 2022)( Maucais-Jarvis, Merz et al., 2020). For example in 1977 the Food and Drug Administration in the US released policy guidlines for clinical trials in General Considerations for the clinical Evaluation of Drugs which was based on data that excluded all ‘’Women of Childbearing Potential’’ from phase 1 clinical trials, regardless if they were on birth control, single or if their husband had a vasectomy (U.S. FDA, 1977). It wasn’t until 1993 that the FDA revised its publication from 1977 allowing women+ to be included in all stages of clinical trials if it met certain criteria (U.S. FDA, 1993). This was done as there was a “growing concern that the drug development process does not produce adequate information about the effects of drugs on women’’(U.S. FDA, 1993).
In addition to the exclusion of women+ from clinical trials and health data collection processes, the presentation and prevalence of health conditions can vary according to gender ( Maucais-Jarvis, Merz et al., 2020) but this is not always considered in clinical management of female patients. For example, clinical evidence shows that women+ are half as likely to receive interventional medicine for coronary artery disease when compared to their male counterparts (Weisz, Gusmano, Rodwin, 2004).
Although there is clear evidence of exclusion and bias in women+ healthcare, one must first know where the deficiencies and bias lie within particular conditions to be able to appropriately address them. Machine learning has the potential to make a vast impact on women+ centered health by analysing health related data of various conditions, identifing these key defiencies and biases and addressing these key deficiencies to develop a more appropriate approach to the management of these conditions.
Research Aim: The aim of this research is to explore the deficiencies in the management of women+’s health conditions from presentation to diagnosis and treatment across the lifecycle and investigate issues of bias and exclusion."
nchar(z)
z
library(tidyverse)
library(matlab)
begin <- 50001
end <-100000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 80591
end <-90000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(tidyverse)
library(matlab)
begin <- 40007
end <-50000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 56407
end <- 56500
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 40047
end <- 100000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 40049
end <- 100000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
end <- 90000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
numbers[isprime(numbers)==1 & between(numbers %% 10000, 000, 1000)]
begin <- 54049
end <- 55000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |>
filter(word_length == 5)
z |> filter(str_detect(word, "a.ave"))
z |> filter(str_detect(word, "a.gal"))
z |> filter(str_detect(word, "ta.o."))
begin <- 40007
end <- 50000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
z |> filter(str_detect(word, "n..e."))
library(factoextra)
palmerpenguins::penguins %>% dplyr::select(bill_length_mm:body_mass_g) %>%  NbClust::NbClust(method = "kmeans") %>%  fviz_nbclust()
palmerpenguins::penguins %>%
dplyr::select(bill_length_mm:body_mass_g)
palmerpenguins::penguins %>%
dplyr::select(bill_length_mm:body_mass_g) %>%
NbClust::NbClust(method = "kmeans")
palmerpenguins::penguins %>%
dplyr::select(bill_length_mm:body_mass_g) %>%
NbClust::NbClust(method = "kmeans") %>%
fviz_nbclust()
library(tidyverse)
library(matlab)
begin <- 20003
end <- 30000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 20093
end <- 30000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 20963
end <- 30000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
82/34
81/35
begin <- 32007
end <- 33000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 23007
end <- 24000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 23807
end <- 23900
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
z <- words |>
filter(word_length == 4)
z |> filter(str_detect(word, "rom."))
z <- words |>
filter(word_length == 4)
library(words)
z <- words |>
filter(word_length == 4)
z |> filter(str_detect(word, "rom."))
z |> filter(str_detect(word, "ro.s"))
z |> filter(str_detect(word, "re.s"))
4+7
x <- 4+7
x+4
y <- x+8
library(tidyverse)
mtcars |> ggplot(aes(mpg, cyl)) + geom_point()
?geom_point
5 + 8
5 * 89
install.packages("palmerpenguins")
install.packages("scales")
install.packages("scales")
library(scales)
?scales::col_factor
pal <- col_bin("Greens", domain = 0:100)
show_col(pal(sort(runif(10, 60, 100))))
pal <- col_bin("Greens", domain = 0:100)
show_col(pal(sort(runif(10, 60, 100))))
library(tidyverse)
45 + 17
pi
sqrt(x=49)
sqrt(10000)
?sqrt
y_square_root_result <- sqrt(49)
y_square_root_result
x <- "I am Groot"
x
nchar(x)
x <- "numeric (or double) is for numbers with decimals. Default for numbers."
x
nchar(x)
x <- "These are internal generic primitive functions: methods can be defined for them individually or via the Math group generic. For complex arguments (and the default method), z, abs(z) == Mod(z) and sqrt(z) == z^0.5."
nchar(x)
3 + 8
as.character(3+8)
z <- as.character(3+8)
class(x)
class(z)
class(y_square_root_result)
View(diamonds)
glimpse(diamonds)
summary(diamonds)
str(diamonds)
names(diamoonds)
names(diamonds)
diamonds[, "depth"]
diamonds$depth
diamonds[3, 5]
diamonds[, 5]
diamonds[3, ]
diamonds[3:8,]
3:8
library(palmerpenguins)
View(penguins)
is.na(penguins)
dim(penguins)
"August" %in% month.name
"Agust" %in% month.name
month.abb
month.name
letters
LETTERS
Sys.date()
System.date()
sys.date()
Sys.Date()
citation("palmerpenguins")
airquality
?airquality
oolive
olive
library(dslabs)
olive
glimpse(olive)
summary(olive)
levels(olive$region)
library(swirl)
install_course("R Programming E")
swirl()
5+7
x <- 5 + 7
.libPaths()
packageVersion("rlang")
remotes::install_version("rlang", version = "1.0.2", repos = "http://cran.us.r-project.org")
packageVersion("rlang")
remotes::install_version("rlang", version = "1.0.2", repos = "http://cran.us.r-project.org")
packageVersion("rlang")
remotes::install_version("rlang", version = "1.1.0", repos = "http://cran.us.r-project.org")
packageVersion("rlang")
begin <- 30043
end <-100000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(matlab)
numbers[isprime(numbers)==1]
begin <- 30843
end <-100000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |>
filter(word_length == 4)
z |> filter(str_detect(word, ".ose"))
library(words)
library(tidyverse)
library(matlab)
library(words)
z <- words |>
filter(word_length == 4)
library(tidyverse)
library(matlab)
library(words)
z <- words |>
filter(word_length == 4)
z |> filter(str_detect(word, ".ose"))
z <- words |>
filter(word_length == 4)
z <- words |>
filter(word_length == 4)
z <- words |>
dplyr::filter(word_length == 4)
words
z <- words |>
dplyr::filter(word_length == 4)
library(tidyverse)
library(matlab)
begin <- 34201
end <-34300
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 43201
end <-43300
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |>
dplyr::filter(word_length == 5)
z |> filter(str_detect(word, "e.i.n"))
z |> filter(str_detect(word, "e.i.o"))
z |> filter(str_detect(word, ".ioe."))
opts="[ioe]"
z |> filter(str_detect(word, glue::glue(".{opts}{opts}{opts}.")))
library(tidyverse)
library(rtoot)
get_timeline_public(hashtag = "rstats", instance = "mastodon.social", limit = 200)
library(tidyverse)
library(rtoot)
auth_setup()
get_timeline_public(hashtag = "rstats", instance = "mastodon.social", limit = 200)
date <- Sys.Date()
date <- paste0(wday(date, label = T, abbr = F), " ", month(date, label = T, abbr = F), " ", day(date), " ",year(date))
library(lubridate)
date <- paste0(wday(date, label = T, abbr = F), " ", month(date, label = T, abbr = F), " ", day(date), " ",year(date))
search_term <- "coronavirus"
# downloads tweets
token <- auth_get()# get_token()
library(rtoot)
# downloads tweets
token <- auth_get()# get_token()
get_timeline_public(hashtag = "rstats", instance = "mastodon.social", limit = 200)
?get_timeline_public
get_timeline_public()
z=.Last.value
View(z)
library(tidyverse)
library(rtoot)
library(lubridate)
auth_setup()
auth_setup()
auth_setup()
library(tidyverse)
library(rtoot)
library(lubridate)
auth_setup()
?auth_setup
auth_setup("mastodon.social", "public")
get_timeline_hashtag(hashtag = "rstats", instance = "fosstodon.org")
get_timeline_hashtag(hashtag = "rstats", instance = "fosstodon.org") |>
View()
get_timeline_hashtag(hashtag = "milan", instance = "fosstodon.org") |>
View()
get_timeline_hashtag(hashtag = "rstats", instance = "fosstodon.org")
greens <- .Last.value
# sees which lones have emojis
green_emojis <- greens %>%
mutate(emoji = emo::ji_extract_all(text)) %>%
unnest(cols = c(emoji)) %>%
count(emoji, sort = TRUE)
# function to download emoji image
emoji_to_link <- function(x) {
paste0("https://emojipedia.org/emoji/",x) %>%
read_html() %>%
html_nodes("tr td a") %>%
.[1] %>%
html_attr("href") %>%
paste0("https://emojipedia.org/", .) %>%
read_html() %>%
html_node('div[class="vendor-image"] img') %>%
html_attr("src")
}
# makes html/image label
link_to_img <- function(x, size = 20) {
paste0("<img src='", x, "' width='", size, "'/>")
}
# makes df of top ten, with url's and labels
top_green <- green_emojis %>%
slice(1:10) %>%
mutate(url = map_chr(emoji, slowly(~emoji_to_link(.x), rate_delay(1))),
label = link_to_img(url))
library(rvest)
# makes df of top ten, with url's and labels
top_green <- green_emojis %>%
slice(1:10) %>%
mutate(url = map_chr(emoji, slowly(~emoji_to_link(.x), rate_delay(1))),
label = link_to_img(url))
green_emojis %>%
slice(1:10)
greens <- get_timeline_hashtag(hashtag = "milan", instance = "fosstodon.org", limit = 2000)
# sees which lones have emojis
green_emojis <- greens %>%
mutate(emoji = emo::ji_extract_all(text)) %>%
unnest(cols = c(emoji)) %>%
count(emoji, sort = TRUE)
# function to download emoji image
emoji_to_link <- function(x) {
paste0("https://emojipedia.org/emoji/",x) %>%
read_html() %>%
html_nodes("tr td a") %>%
.[1] %>%
html_attr("href") %>%
paste0("https://emojipedia.org/", .) %>%
read_html() %>%
html_node('div[class="vendor-image"] img') %>%
html_attr("src")
}
# makes html/image label
link_to_img <- function(x, size = 20) {
paste0("<img src='", x, "' width='", size, "'/>")
}
# makes df of top ten, with url's and labels
top_green <- green_emojis %>%
slice(1:10) %>%
mutate(url = map_chr(emoji, slowly(~emoji_to_link(.x), rate_delay(1))),
label = link_to_img(url))
lincoln <- "Four score and seven years ago our fathers brought forth on this continent, a new nation, conceived in Liberty, and dedicated to the proposition that all men are created equal.
Now we are engaged in a great civil war, testing whether that nation, or any nation so conceived and so dedicated, can long endure. We are met on a great battle-field of that war. We have come to dedicate a portion of that field, as a final resting place for those who here gave their lives that that nation might live. It is altogether fitting and proper that we should do this.
But, in a larger sense, we can not dedicate—we can not consecrate—we can not hallow—this ground. The brave men, living and dead, who struggled here, have consecrated it, far above our poor power to add or detract. The world will little note, nor long remember what we say here, but it can never forget what they did here. It is for us the living, rather, to be dedicated here to the unfinished work which they who fought here have thus far so nobly advanced. It is rather for us to be here dedicated to the great task remaining before us—that from these honored dead we take increased devotion to that cause for which they gave the last full measure of devotion—that we here highly resolve that these dead shall not have died in vain—that this nation, under God, shall have a new birth of freedom—and that government of the people, by the people, for the people, shall not perish from the earth."
library(tidyverse)
?str_count
str_count(lincoln, pattern = "t")
test <- tribble(~colour, ~value,
"green", 23,
"turquoise", 34,
"magenta", 12)
View(test)
library(here)
here()
list.files()
here("week-02", "data", "CK-2015.pdf")
