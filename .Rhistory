t.test(body_mass_g ~ sex, data = penguins)
t.test(bill_depth_mm ~ sex, data = penguins)
t.test(body_mass_g ~ species, data = penguins |> filter(species != "Gentoo"))
t.test(body_mass_g ~ year, data = penguins |> filter(year != 2008))
penguins |>
ggplot(aes(x = flipper_length_mm, y = as.factor(year))) +
geom_density_ridges() +
theme_minimal()
penguins |>
ggplot(aes(x = flipper_length_mm, y = as.factor(year))) +
geom_density_ridges(alpha = 0.6) +
theme_minimal()
penguins |>
ggplot(aes(x = body_mass_g, y = as.factor(year))) +
geom_density_ridges(alpha = 0.6) +
theme_minimal()
library(showtext)
library(showtext)
font_add("Fuzzy Bubbles", regular = "week-05/assets/ComingSoon-Regular.ttf")
showtext_auto()
theme_clean <- function() {
theme_minimal(base_family = "Fuzzy Bubbles") +
theme(panel.grid.minor = element_blank(),
text = element_text(size = 16, family = "Fuzzy Bubbles"),
plot.background = element_rect(fill = "white", color = NA),
axis.text = element_text(size = 16),
axis.title = element_text(face = "bold", size = 20),
strip.text = element_text(face = "bold", size = rel(0.8), hjust = 0),
strip.background = element_rect(fill = "grey80", color = NA),
legend.text = element_text(size = 16))
}
penguins |>
ggplot(aes(x = body_mass_g, y = as.factor(year))) +
geom_density_ridges(alpha = 0.6) +
theme_minimal()
penguins |>
ggplot(aes(x = body_mass_g, y = as.factor(year))) +
geom_density_ridges(alpha = 0.6) +
theme_clean()
penguins |>
ggplot(aes(x = body_mass_g, y = as.factor(year))) +
geom_density_ridges(alpha = 0.6) +
labs(title = "Penguins don't seem to be getting heavier",
y = "",
x = "Penguin Weight (g)",
caption = "Data from @Palmerpenguins") +
theme_clean()
?font_add
penguins |>
ggplot(aes(species)) +
geom_bar() +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq())) +
geom_bar() +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq())) +
geom_bar() +
labs(x = "", y = "") +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq(), fill = species)) +
geom_bar() +
labs(x = "", y = "") +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq(), fill = species)) +
geom_bar(show.legend = F) +
labs(x = "", y = "") +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq(), fill = species)) +
geom_bar(show.legend = F) +
scale_fill_viridis_c() +
labs(x = "", y = "") +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq(), fill = species)) +
geom_bar(show.legend = F) +
scale_fill_viridis_d() +
labs(x = "", y = "") +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(x = bill_length_mm, bill_depth_mm, colour = species)) +
geom_point() +
labs(title = "Penguins don't seem to be getting heavier",
y = "",
x = "Penguin Weight (g)",
caption = "Data from @Palmerpenguins") +
theme_clean()
penguins |>
ggplot(aes(x = bill_length_mm, bill_depth_mm, colour = species)) +
geom_point(show.legend = F) +
labs(title = "Penguins don't seem to be getting heavier",
y = "",
x = "Penguin Weight (g)",
caption = "Data from @Palmerpenguins") +
theme_clean()
penguins |>
ggplot(aes(x = bill_length_mm, bill_depth_mm, colour = species)) +
geom_point() +
labs(title = "Penguins don't seem to be getting heavier",
y = "",
x = "Penguin Weight (g)",
caption = "Data from @Palmerpenguins") +
scale_color_viridis_d() +
theme_clean()
penguins |>
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, colour = species)) +
geom_point() +
labs(title = "Adelie Penguins have Short, Deep Bills",
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
caption = "Data from @Palmerpenguins") +
scale_color_viridis_d() +
theme_clean()
penguins |>
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, colour = species)) +
geom_point() +
labs(title = "Adelie Penguins have Short, Deep Bills",
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
caption = "Data from @Palmerpenguins") +
scale_color_viridis_d() +
theme(legend.position = "bottom") +
theme_clean()
?legend.position
penguins |>
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, colour = species)) +
geom_point() +
labs(title = "Adelie Penguins have Short, Deep Bills",
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
caption = "Data from @Palmerpenguins") +
scale_color_viridis_d() +
theme_clean() +
theme(legend.position = "bottom")
library(tidyverse)
library(matlab)
library(tidyverse)
library(matlab)
begin <- 30001
end <- 40000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 31907
end <- 32000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 30179
end <- 40000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 37109
end <- 37200
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |>
dplyr::filter(word_length == 5)
z |> filter(str_detect(word, ".anil"))
z |> filter(str_detect(word, ".aive"))
z |> filter(str_detect(word, "s.a.y"))
library(tidyverse)
?theme
1e-12*4*pi*(3e9*1e18)^2/4e33
365*24*3600
365*24*3600*3e10*3.26
1e-12*4*pi*(3e9*3.1e18)^2/4e33
1e-12*4*pi*(3e9*3.1e18)^2/4e33/1e9
pi/180*4/3600
pi/180*4/3600*3e6
pi/180*4/3600*3e6*4
1e-12*4*pi*(3e9*3.1e18)^2
1e-12*4*pi*(3e9*3.1e18)^2/4e33/1e9*4
3e5/(72)
16/(4*365*24*60)
16/(4*365*24*60)*180/pi
16/(4*365*24*60)*180/pi*60
16/(4*365*24*60)*180/pi*60*60
3600*180/pi
3600*180/pi*150*9
3600*180/pi*150*9/1e9
library(tidyverse)
library(matlab)
begin <- 30007
end <- 40000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 53907
end <- 54000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 93507
end <- 93600
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 95307
end <- 95400
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 95037
end <- 96000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(tidyverse)
library(matlab)
begin <- 40003
end <- 50000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 30403
end <- 100000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 30003
end <- 100000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1 & between(numbers %% 10000, 4000, 5000)]
packageVersion("sen2r")
begin <- 30001
end <- 40000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 69317
end <- 100000
my_step <- 10000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |>
dplyr::filter(word_length == 5)
z |> filter(str_detect(word, ".iert"))
z |> filter(str_detect(word, "i.ert"))
z |> filter(str_detect(word, "ev.ed"))
McGrath, Michelle <michelle.mcgrath@lazard.com>; fiona bolger <bolgerf@gmail.com>
begin <- 32007
end <- 32100
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
numbers[isprime(numbers)==1 & between(numbers %% 10000, 4000, 5000)]
begin <- 32009
end <- 32100
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
z |> filter(str_detect(word, "ola.."))
z |> filter(str_detect(word, "..lla"))
library(lterdatasampler)
?lterdatasampler::pie_crab
View(pie_crab)
library(tidyverse)
library(matlab)
begin <- 20003
end <- 30000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 92003
end <- 93000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 60923
end <- 70000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(tidyverse)
library(words)
z <- words |>
dplyr::filter(word_length == 5)
z |> filter(str_detect(word, "eta.e"))
z |> filter(str_detect(word, "a..at"))
z |> filter(str_detect(word, "a...t"))
library(matlab)
begin <- 50001
end <- 51000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
numbers[isprime(numbers)==1 & between(numbers %% 10000, 2000, 3000)]
begin <- 80001
end <- 81000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
z |> filter(str_detect(word, "stoa."))
begin <- 24003
end <- 25000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 34023
end <- 100000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1 & between(numbers %% 10000, 4000, 5000)]
deps <- list(
"arm",
"car",
"corrplot",
"FRK",
"gghighlight",
"ggplot2",
"ggmap",
"gridExtra",
"gstat",
"hexbin",
"jtools",
"kableExtra",
"knitr",
"lme4",
"lmtest",
"lubridate",
"MASS",
"merTools",
"plyr",
"RColorBrewer",
"rgdal",
"sf",
"sjPlot",
"sp",
"spgwr",
"spatialreg",
"spacetime",
"stargazer",
"tidyverse",
"tmap",
"tufte",
"viridis"
)
library(deps)
?library
pacman::p_load(deps)
z=unlist(deps)
z
pacman::p_load(z)
pacman::p_load(arm, car, corrplot)
print(z)
print(z, quote=F)
pacman::p_load(print(z, quote=F))
z1=print(z, quote=F)
z1
noquote(z1)
z1=noquote(z1)
z1
pacman::p_load(z1)
?pacman::p_load
pacman::p_load(char=z)
install_github("andrewzm/FRK", dependencies = TRUE, build_vignettes = TRUE)
devtools::install_github("andrewzm/FRK", dependencies = TRUE, build_vignettes = TRUE)
devtools::install_github("andrewzm/FRK")
remotes::install_github("andrewzm/FRK")
begin <- 20003
end <- 30000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 92003
end <- 93000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 32903
end <- 33000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(tidyverse)
library(matlab)
begin <- 30003
end <- 100000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 76303
end <- 76400
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
?softbib
install.packages("softbib")
library(softbib)
softbib(include = c("countrycode", "modelsummary", "marginaleffects"))
softbib(include = c("countrycode", "modelsummary"))
install.packages("openair")
library(openair)
?openair::importNI
z=importNI()
View(z)
max(z$air_temp)
max(z$air_temp, na.rm = T)
min(z$air_temp, na.rm = T)
which.min(z$air_temp, na.rm = T)
which.min(z$air_temp)
z[1879,]
which.max(z$air_temp)
z[4285,]
?importEurope
?openair::importMeta
z1 <- importMeta(source = "ni")
z1
View(z1)
z2 <- importMeta(source = "europe")
View(z2)
# Install saqgetr package
install.packages("saqgetr")
z2 <- importMeta(source = "europe", all = T)
z3=z2 |> str_detect(code, "^ie")
library(tidyverse)
z3=z2 |> filter(str_detect(code, "^ie"))
z3
View(z3)
View(z3)
View(z2)
table(z2$country)
head(z2 |> filter(date_end > 2023-01-01))
View(.Last.value)
class(z2$date_end)
as.Date("2023-01-01")
head(z2 |> filter(date_end > as.Date("2023-01-01")))
View(.Last.value)
z4 <- z2 |> filter(date_end > as.Date("2023-01-01"))
View(z4)
library(sf)
z4 |> ggplot(aes(longitude, latitude)) + geom_sf()
z5 <- z4 |> st_as_sf(coords = c(longitude,latitude))
z5 <- st_as_sf(z4, coords = c(longitude,latitude))
z5 <- z4 |> st_as_sf(coords = c("longitude", "latitude"))
z5 <- z4 |> drop_na() |> st_as_sf(coords = c("longitude", "latitude"))
length(z5)
dim(z4)
z5 <- z4 |> filter(!is.na(longitude), !is.na(latitude)) |> st_as_sf(coords = c("longitude", "latitude"))
length(z5)
sum(!is.na(z4$latitude))
z5 <- z4 |> filter(!is.na(longitude), !is.na(latitude))
dim(z5)
z6 <- z4 |> filter(!is.na(longitude), !is.na(latitude)) |> st_as_sf(coords = c("longitude", "latitude"))
z6
z6 |> ggplot() + geom_sf()
View(z5)
z6 |> filter(latitude > 10) |> ggplot() + geom_sf()
z6 |> ggplot() + geom_sf() + coord_sf(xlim = c(-10, 10), ylim = c(40, 60))
library(rnaturalearth)
?rnaturalearth::countries110
countries110
z6
st_crs(countries110)
st_crs(z6)
st_crs(z6) <- st_crs(countries110)
st_crs(z6)
z6 |> ggplot() + geom_sf() + coord_sf(xlim = c(-10, 10), ylim = c(40, 60))
z6 |> ggplot() + geom_sf() + coord_sf(xlim = c(-10, 10), ylim = c(40, 60)) + geom_sf(data = countries110)
class(countries110)
z8 <- st_as_sf(countries110)
z6 |> ggplot() + geom_sf() + coord_sf(xlim = c(-10, 10), ylim = c(40, 60)) + geom_sf(data = z8)
z6 |> ggplot() + geom_sf() + geom_sf(data = z8) + coord_sf(xlim = c(-10, 10), ylim = c(40, 60))
z6 |> ggplot() + geom_sf() + geom_sf(data = z8, alpha = 0.3) + coord_sf(xlim = c(-10, 10), ylim = c(40, 60))
library(tidyverse)
library(matlab)
begin <- 30143
end <- 100400
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 30043
end <- 90400
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1 & between(numbers %% 10000, 1000, 2000)]
begin <- 31843
end <- 90400
my_step <- 10000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 50001
end <- 90400
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 70081
end <- 100000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |>
dplyr::filter(word_length == 5)
z |> filter(str_detect(word, "rou.."))
