mutate(last_name = str_replace(last_name, "Environmental Science", "EnvSci.")) %>%
mutate(label = ifelse(year == year_max, code, "")) %>%
mutate(code = glue::glue("{code}: {abbreviate(last_name, 20)}")) %>%
ggplot(aes(year, final, colour = code, group = code)) +
geom_line(size = 2) +
geom_point(size = 5) +
geom_label_repel(aes(label = label),
nudge_x = 0.2,
size = 12,
na.rm = TRUE,
show.legend = F) +
scale_color_okabe_ito() +
scale_y_continuous(breaks = seq(100, 700, by = 50)) +
labs(y = "Final Points", x = "") +
theme_clean() +
theme(legend.position = "bottom", legend.title = element_blank()) +
guides(col=guide_legend(nrow=3))
my_year <- 2016
z2 <- z |>
filter(str_detect(code, "GA"),
year == my_year)
length <- min(c(50, nrow(z2)))
z2[1:length,] |>
gt()
z %>%  filter(code %in% courses) %>%
left_join(max_years) %>%
mutate(last_name = str_replace(last_name, "Environmental Science", "EnvSci.")) %>%
mutate(label = ifelse(year == year_max, code, "")) %>%
mutate(code = glue::glue("{code}: {abbreviate(last_name, 20)}")) %>%
ggplot(aes(year, final, colour = code, group = code)) +
geom_line(size = 2) +
geom_point(size = 5) +
geom_label_repel(aes(label = label),
nudge_x = 0.2,
size = 12,
na.rm = TRUE,
show.legend = F) +
scale_color_okabe_ito() +
scale_y_continuous(breaks = seq(100, 700, by = 50)) +
labs(y = "Final Points", x = "") +
theme_clean() +
theme(legend.position = "bottom", legend.title = element_blank()) +
guides(col=guide_legend(nrow=3))
max_years <- z %>%  filter(code %in% courses) %>%
group_by(code) %>%
summarize(year_max = max(year)) |>
arrange(desc(year_max))
courses <- max_years$code[10:18]
courses
max_years
courses <- z1 %>% filter(str_detect(last_name, "Physics"),
!str_detect(last_name, "Agri")) %>%
pull(code)
courses
max_years <- z %>%  filter(code %in% courses) %>%
group_by(code) %>%
summarize(year_max = max(year)) |>
arrange(desc(year_max))
courses <- max_years$code[10:18]
z %>%  filter(code %in% courses) %>%
left_join(max_years) %>%
mutate(last_name = str_replace(last_name, "Environmental Science", "EnvSci.")) %>%
mutate(label = ifelse(year == year_max, code, "")) %>%
mutate(code = glue::glue("{code}: {abbreviate(last_name, 20)}")) %>%
ggplot(aes(year, final, colour = code, group = code)) +
geom_line(size = 2) +
geom_point(size = 5) +
geom_label_repel(aes(label = label),
nudge_x = 0.2,
size = 12,
na.rm = TRUE,
show.legend = F) +
scale_color_okabe_ito() +
scale_y_continuous(breaks = seq(100, 700, by = 50)) +
labs(y = "Final Points", x = "") +
theme_clean() +
theme(legend.position = "bottom", legend.title = element_blank()) +
guides(col=guide_legend(nrow=3))
z2[1:length,] |>
gt()
library(tabulizer)
extract_tables(file = "week-02/pdf-tables.pdf")
z2 <- extract_tables(file = "week-02/pdf-tables.pdf")
View(z2)
z2 <- extract_tables(file = "week-02/pdf-tables.pdf")[[1]]
?extract_tables
z2 <- extract_tables(file = "week-02/pdf-tables.pdf", method="data.frame")
z2 <- extract_tables(file = "week-02/pdf-tables.pdf", output = "data.frame")
z2 <- extract_tables(file = "week-02/pdf-tables.pdf", output = "data.frame")[[1]]
library(tidyverse)
library(pdftools)
library(ggokabeito)   # Colorblind-friendly color palette
library(showtext)
library(ggrepel)
library(here)
library(gt)
library(pdftools)
directory <- "C:\\Users\\ehickey\\OneDrive - Technological University Dublin\\Desktop\\Academic\\Hector\\fizzics\\fizzics\\_posts\\2021-12-06-university-choices\\data"
years <- c("07", "08", "09", "10", "13", 14:19 )
cao_points_year <- function(year) {
cao_pdf <- glue::glue("http://www2.cao.ie/points/lvl8_{year}.pdf")
z <- pdf_text(cao_pdf) %>%
str_split("\n") %>%
unlist()
z <- z[!str_detect(z, "^ ") & z != "" & !str_detect(z, "Course Code") & str_count(z, "  +") == 3] %>% # gets rid of non-data rows
str_split("  +") %>% # splits rows based on runs of several spaces
unlist() %>%
str_remove("#") %>%
str_remove("\\*") # deletes some annoying characters
z <- tibble(year = glue::glue("20{year}"),
code = z[c(T, F, F, F)],
course = z[c(F, T, F, F)],
final = z[c(F, F, T, F)],
medium = z[c(F, F, F, T)])
# original list made bunches of four elements that together described a course. This tibble winds them up to one row
z
}
z <- map_df(years, cao_points_year) %>%
mutate(year = as.numeric(year))
z21 <- readxl::read_excel(here(directory, "CAOPointsCharts2021.xlsx"),
sheet = "EOS_2021", skip = 10) %>%
janitor::clean_names() %>%
filter(course_level == 8) %>%
mutate(year = 2021) %>%
select(year,
code = course_code,
course = course_title,
final = eos_points,
medium = eos_midpoints) %>%
mutate(year = 2021,
medium = as.character(medium))
z20 <- readxl::read_excel(here(directory,"CAOPointsCharts2020.xlsx"),
sheet = "PointsCharts2020_V2", skip = 9) %>%
janitor::clean_names() %>%
filter(level == 8) %>%
mutate(year = 2020) %>%
select(year,
code = course_code2,
course = course_title,
final = eos,
medium = eos_mid_point) %>%
mutate(year = 2020)
z <- bind_rows(z, z20, z21)
View(z)
table(z$year)
z1 <- z %>%
select(code, course) %>%
group_by(code) %>%
mutate(last_name = if_else(row_number() == n(), 1 ,0)) %>%
filter(last_name == 1) %>%
select(code, last_name = course)
z <- z %>%
left_join(z1) %>%
mutate(final = as.numeric(final),
medium = as.numeric(medium),
label = if_else(year == max(year),
as.character(code), NA_character_))
courses <- z1 %>% filter(str_detect(last_name, "Physics"),
!str_detect(last_name, "Agri")) %>%
pull(code)
max_years <- z %>%  filter(code %in% courses) %>%
group_by(code) %>%
summarize(year_max = max(year)) |>
arrange(desc(year_max))
courses <- max_years$code[10:18]
z %>%  filter(code %in% courses) %>%
left_join(max_years) %>%
mutate(last_name = str_replace(last_name, "Environmental Science", "EnvSci.")) %>%
mutate(label = ifelse(year == year_max, code, "")) %>%
mutate(code = glue::glue("{code}: {abbreviate(last_name, 20)}")) %>%
ggplot(aes(year, final, colour = code, group = code)) +
geom_line(size = 2) +
geom_point(size = 5) +
geom_label_repel(aes(label = label),
nudge_x = 0.2,
size = 12,
na.rm = TRUE,
show.legend = F) +
scale_color_okabe_ito() +
scale_y_continuous(breaks = seq(100, 700, by = 50)) +
labs(y = "Final Points", x = "") +
theme_clean() +
theme(legend.position = "bottom", legend.title = element_blank()) +
guides(col=guide_legend(nrow=3))
my_year <- 2016
z2 <- z |>
filter(str_detect(code, "GA"),
year == my_year)
View(z2)
z2 <- z2 |> mutate(code1 = str_sub(code, 1, 2))
table(z2$code1)
z <- map_df(years, cao_points_year) %>%
mutate(year = as.numeric(year))
z21 <- readxl::read_excel(here(directory, "CAOPointsCharts2021.xlsx"),
sheet = "EOS_2021", skip = 10) %>%
janitor::clean_names() %>%
filter(course_level == 8) %>%
mutate(year = 2021) %>%
select(year,
code = course_code,
course = course_title,
final = eos_points,
medium = eos_midpoints) %>%
mutate(year = 2021,
medium = as.character(medium))
z20 <- readxl::read_excel(here(directory,"CAOPointsCharts2020.xlsx"),
sheet = "PointsCharts2020_V2", skip = 9) %>%
janitor::clean_names() %>%
filter(level == 8) %>%
mutate(year = 2020) %>%
select(year,
code = course_code2,
course = course_title,
final = eos,
medium = eos_mid_point) %>%
mutate(year = 2020)
z <- bind_rows(z, z20, z21)
z1 <- z %>%
select(code, course) %>%
group_by(code) %>%
mutate(last_name = if_else(row_number() == n(), 1 ,0)) %>%
filter(last_name == 1) %>%
select(code, last_name = course)
z <- z %>%
left_join(z1) %>%
mutate(final = as.numeric(final),
medium = as.numeric(medium),
label = if_else(year == max(year),
as.character(code), NA_character_)) |>
mutate(code1 = str_sub(code, 1, 2))
table(z2$code1)
table(z$code1)
table(z$year)
library(tidyverse)
library(matlab)
begin <- 30003
end <-1030000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1 & between(numbers %% 10000, 000, 1000)]
end <-100000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1 & between(numbers %% 10000, 000, 1000)]
begin <- 90003
end <-100000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
end <-91000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
load("C:/Users/ehickey/Downloads/data_a1dfec537b97352b6beb42b8811f6534.RData")
load("C:/Users/ehickey/Downloads/data_a1dfec537b97352b6beb42b8811f6534.RData")
install.packages("dplyr")
library(rentrez)
library(tidyverse)
entrez_db_searchable("nuccore")
z <- entrez_search(db = "nuccore", term = "brca1")
z
z[[1]]
z[[2]]
z[[3]]
z[[4]]
z[[5]]
z[[1]]
z1 <- entrez_fetch(db = "nuccore", id = z[[1]][1], rettype = "fasta")
z1
z[[1]][1]
rio::import("https://docs.google.com/spreadsheets/d/1lu6v9Q99odU8ZiapxVY--aclJ1hg03mCnGfNpIPo-1w/edit?usp=sharing")
library(tidyquant)
tq_index("DOW")
?tq_index
?tq_index_index
?tq_index_options
tq_index_options()
library(tidyverse)
library(rtweet)
date <- Sys.Date()
date <- paste0(wday(date, label = T, abbr = F), " ", month(date, label = T, abbr = F), " ", day(date), " ",year(date))
search_term <- "coronavirus"
# downloads tweets
token <- get_token()
?auth_get()
auth_get()
# downloads tweets
token <- auth_get()# get_token()
greens <- search_tweets(q= search_term, n=10000,
geocode = "53.33,-6.25,500mi",
token = token)
library(rtoot)
auth_setup()
auth_setup()
auth_setup()
auth_setup()
?rtoot::get_status
get_timeline_public(instance = "mastodon.social")
z <- get_timeline_public(instance = "mastodon.social")
View(z)
z <- get_timeline_hashtag(hashtag = "rstats", instance = "fosstodon.org")
z <- get_timeline_public(instance = "mastodon.social")
?get_timeline_public
z <- get_timeline_public(instance = "mastodon.social", limit = 2000)
Titanis
Titanic
class(Titanic)
Titanic[[1]]
Titanic[[2]]
library(dslabs)
dslabs::movielens
?dslabs
?dslabs::ds_theme_set
dslabs::brca
class(brca)
dslabs::admissions
dslabs::results_us_election_2016
dslabs::gapminder
dslabs::results_us_election_2016 |> class()
dslabs:: |> class()
dslabs::death_prob |> class()
dslabs::tissue_gene_expression |> class()
dslabs::tissue_gene_expression
base::T
data()
dslabs::murders |> class()
dslabs::movielens |> class()
dslabs::trump_tweets |> class()
dslabs::research_funding_rates |> class()
install.packages("biomod2")
starwars <- read_html("https://rvest.tidyverse.org/articles/starwars.html")
library(rvest)
starwars <- read_html("https://rvest.tidyverse.org/articles/starwars.html")
starwars
films <- starwars %>% html_elements("section")
films
year <- 2000:2022 |>
sample(1)
new_url <- glue::glue("https://www.imdb.com/search/title/?title_type=feature&year={year}-01-01,{year}-12-31")
year
new_url
read_html(new_url)
read_html(new_url) |> html_element(".runtime")
read_html(new_url) |> html_element(".runtime") |> html_table()
new_url
read_html(new_url) |> html_node(".runtime")
read_html(new_url) |> html_nodes(".runtime")
read_html(new_url) |> html_nodes(".runtime") |> html_text2()
?html_element
read_html(new_url) |> html_element("css")
read_html(new_url) |> html_elements("css")
html <- read_html("https://en.wikipedia.org/w/index.php?title=The_Lego_Movie&oldid=998422565")
html %>%
html_element(".tracklist") %>%
html_table()
html |> html_nodes(".tracklist")
html |> html_nodes(".tracklist") |>
html_table()
html <- read_html(new_url)
html %>%
html_element(".tracklist") %>%
html_table()
library(here)
library(tidyverse)
library(tabulizer)
here(system.file(tabulizer))
here(system.file("tabulizer"))
system.file("tabulizer")
here(system.file(package="tabulizer"))
here(system.file(package="tabulizer"), "examples")
here(system.file(package="tabulizer"), "examples", "data.pdf")
here(system.file(package="tabulizer"), "examples") |> list.files()
here(system.file(package="tabulizer"), "examples", "data.pdf") |> extract_tables(output = "data.frame")
here(system.file(package="tabulizer"), "examples", "data.pdf") |> extract_tables(output = "data.frame") |> pluck(1)
library(fishbase)
install.packages("fishbase")
library(rfishbase)
install.packages("rfishbase")
library(rfishbase)
?rfishbase::distribution
distribution(species_list(Genus='Labroides'))
?rfishbase::available_releases
available_releases()
?rfishbase::load_taxa
load_taxa()
library(rgbif)
?rgbif::occ_data
library(astrodatR)
install.packages("astrodatR")
library(astrodatR)
?astrodatR::SDSS_QSO
SDSS_QSO
SDSS_QSO
SDSS_QSO()
install.packages("askgpt")
library(askgpt)
askgpt("what does simple principle diffuse fine mean?")
askgpt("what does simple principle diffuse fine mean?")
askgpt("what does simple principle diffuse fine mean?")
askgpt("what does simple principle diffuse fine mean?")
askgpt("what does simple principle diffuse fine mean?")
askgpt("what does simple principle diffuse fine mean?")
library(tidyverse)
library(matlab)
library(words)
begin <- 23007
end <-24000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 32709
end <-32800
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 30729
end <-40000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |>
filter(word_length == 5)
z |> filter(str_detect(word, "rei.i"))
library(swirl)
swirl()
install_course("Manipulating_Data_with_dplyr")
install_course("Manipulating Data with dplyr")
install_course("Getting and Cleaning Data")
swirl()
swirl()
library(gapminder)
head(gapminder)
z <- "Historically women+ have been significantly underrepresented with regards to medical research (Merone, Tsey, Darren, Nagle, 2022). This is seen in both policies relating to women+ health, research in clinical trials but also the presentation and management of conditions in clinical settings (Merone, Tsey, Darren, Nagle, 2022)( Maucais-Jarvis, Merz et al., 2020). For example in 1977 the Food and Drug Administration in the US released policy guidlines for clinical trials in General Considerations for the clinical Evaluation of Drugs which was based on data that excluded all ‘’Women of Childbearing Potential’’ from phase 1 clinical trials, regardless if they were on birth control, single or if their husband had a vasectomy (U.S. FDA, 1977). It wasn’t until 1993 that the FDA revised its publication from 1977 allowing women+ to be included in all stages of clinical trials if it met certain criteria (U.S. FDA, 1993). This was done as there was a “growing concern that the drug development process does not produce adequate information about the effects of drugs on women’’(U.S. FDA, 1993).
In addition to the exclusion of women+ from clinical trials and health data collection processes, the presentation and prevalence of health conditions can vary according to gender ( Maucais-Jarvis, Merz et al., 2020) but this is not always considered in clinical management of female patients. For example, clinical evidence shows that women+ are half as likely to receive interventional medicine for coronary artery disease when compared to their male counterparts (Weisz, Gusmano, Rodwin, 2004).
Although there is clear evidence of exclusion and bias in women+ healthcare, one must first know where the deficiencies and bias lie within particular conditions to be able to appropriately address them. Machine learning has the potential to make a vast impact on women+ centered health by analysing health related data of various conditions, identifing these key defiencies and biases and addressing these key deficiencies to develop a more appropriate approach to the management of these conditions.
Research Aim: The aim of this research is to explore the deficiencies in the management of women+’s health conditions from presentation to diagnosis and treatment across the lifecycle and investigate issues of bias and exclusion.
Objectives: The first steps in this research will involve a qualitative study to explore the key deficiencies in the management of women+’s health with key experts in the areas of health (GP’s and Pharmacists) and health related policy makers. The data collected will be analysed using thematic analysis (Braun and Clarke, 2006) and the results will then directly inform subsequent data driven explorations in particular health conditions where deficiencies and biases have been identified."
nchar(z)
z <- "Historically women+ have been significantly underrepresented with regards to medical research (Merone, Tsey, Darren, Nagle, 2022). This is seen in both policies relating to women+ health, research in clinical trials but also the presentation and management of conditions in clinical settings (Merone, Tsey, Darren, Nagle, 2022)( Maucais-Jarvis, Merz et al., 2020). For example in 1977 the Food and Drug Administration in the US released policy guidlines for clinical trials in General Considerations for the clinical Evaluation of Drugs which was based on data that excluded all ‘’Women of Childbearing Potential’’ from phase 1 clinical trials, regardless if they were on birth control, single or if their husband had a vasectomy (U.S. FDA, 1977). It wasn’t until 1993 that the FDA revised its publication from 1977 allowing women+ to be included in all stages of clinical trials if it met certain criteria (U.S. FDA, 1993). This was done as there was a “growing concern that the drug development process does not produce adequate information about the effects of drugs on women’’(U.S. FDA, 1993).
In addition to the exclusion of women+ from clinical trials and health data collection processes, the presentation and prevalence of health conditions can vary according to gender ( Maucais-Jarvis, Merz et al., 2020) but this is not always considered in clinical management of female patients. For example, clinical evidence shows that women+ are half as likely to receive interventional medicine for coronary artery disease when compared to their male counterparts (Weisz, Gusmano, Rodwin, 2004).
Although there is clear evidence of exclusion and bias in women+ healthcare, one must first know where the deficiencies and bias lie within particular conditions to be able to appropriately address them. Machine learning has the potential to make a vast impact on women+ centered health by analysing health related data of various conditions, identifing these key defiencies and biases and addressing these key deficiencies to develop a more appropriate approach to the management of these conditions.
Research Aim: The aim of this research is to explore the deficiencies in the management of women+’s health conditions from presentation to diagnosis and treatment across the lifecycle and investigate issues of bias and exclusion."
nchar(z)
z
library(tidyverse)
library(matlab)
begin <- 50001
end <-100000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 80591
end <-90000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(tidyverse)
library(matlab)
begin <- 40007
end <-50000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 56407
end <- 56500
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 40047
end <- 100000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 40049
end <- 100000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
end <- 90000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
numbers[isprime(numbers)==1 & between(numbers %% 10000, 000, 1000)]
begin <- 54049
end <- 55000
my_step <- 100
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |>
filter(word_length == 5)
z |> filter(str_detect(word, "a.ave"))
z |> filter(str_detect(word, "a.gal"))
z |> filter(str_detect(word, "ta.o."))
begin <- 40007
end <- 50000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
z |> filter(str_detect(word, "n..e."))
library(factoextra)
palmerpenguins::penguins %>% dplyr::select(bill_length_mm:body_mass_g) %>%  NbClust::NbClust(method = "kmeans") %>%  fviz_nbclust()
palmerpenguins::penguins %>%
dplyr::select(bill_length_mm:body_mass_g)
palmerpenguins::penguins %>%
dplyr::select(bill_length_mm:body_mass_g) %>%
NbClust::NbClust(method = "kmeans")
palmerpenguins::penguins %>%
dplyr::select(bill_length_mm:body_mass_g) %>%
NbClust::NbClust(method = "kmeans") %>%
fviz_nbclust()
