countrypops %>%
filter(country_code_2 %in% c(
Australasia, Melanesia, Micronesia, Polynesia)
) %>%
filter(year %in% c(1995, 2005, 2015)) %>%
mutate(region = case_when(
country_code_2 %in% Australasia ~ "Australasia",
country_code_2 %in% Melanesia ~ "Melanesia",
country_code_2 %in% Micronesia ~ "Micronesia",
country_code_2 %in% Polynesia ~ "Polynesia",
)) %>%
pivot_wider(names_from = year, values_from = population) %>%
arrange(region, desc(`2015`)) %>%
select(-starts_with("country_code")) %>%
gt(
rowname_col = "country_name",
groupname_col = "region"
) %>%
tab_header(title = "Populations of Oceania's Countries in 1995, 2005, and 2015") %>%
tab_spanner(
label = "Total Population",
columns = c(`1995`, `2005`, `2015`)
) %>%
fmt_number(
columns = c(`1995`, `2005`, `2015`),
decimals = 0,
use_seps = TRUE
) %>%
tab_options(row_group.as_column = TRUE)
Australasia <- c("AU", "NZ")
Melanesia <- c("NC", "PG", "SB", "VU")
Micronesia <- c("FM", "GU", "KI", "MH", "MP", "NR", "PW")
Polynesia <- c("PF", "WS", "TO", "TV")
# Create a gt table based on a preprocessed `countrypops`
countrypops %>%
filter(country_code_2 %in% c(
Australasia, Melanesia, Micronesia, Polynesia)
) %>%
filter(year %in% c(1995, 2005, 2015)) %>%
mutate(region = case_when(
country_code_2 %in% Australasia ~ "Australasia",
country_code_2 %in% Melanesia ~ "Melanesia",
country_code_2 %in% Micronesia ~ "Micronesia",
country_code_2 %in% Polynesia ~ "Polynesia",
)) %>%
pivot_wider(names_from = year, values_from = population) %>%
arrange(region, desc(`2015`)) %>%
select(-starts_with("country_code")) %>%
gt(
rowname_col = "country_name",
groupname_col = "region"
) %>%
tab_header(title = "Populations of Oceania's Countries in 1995, 2005, and 2015") %>%
tab_spanner(
label = "Total Population",
columns = c(`1995`, `2005`, `2015`)
) %>%
fmt_number(
columns = c(`1995`, `2005`, `2015`),
decimals = 0,
use_seps = TRUE
) %>%
tab_options(row_group.as_column = TRUE)
names(countrypops)
countrypops %>%
filter(country_code_2 %in% c(
Australasia, Melanesia, Micronesia, Polynesia)
) %>%
filter(year %in% c(1995, 2005, 2015)) %>%
mutate(region = case_when(
country_code_2 %in% Australasia ~ "Australasia",
country_code_2 %in% Melanesia ~ "Melanesia",
country_code_2 %in% Micronesia ~ "Micronesia",
country_code_2 %in% Polynesia ~ "Polynesia",
)) %>%
pivot_wider(names_from = year, values_from = population) %>%
arrange(region, desc(`2015`)) %>%
select(-starts_with("country_code"))
penguins |>
group_by(island, sex, species) |>
summarise(
mean_flipper_length_mm = mean(flipper_length_mm, na.rm = T),
mean_body_mass_g = mean(body_mass_g, na.rm = T),
mean_bill_length_mm = mean(bill_length_mm, na.rm = T),
mean_bill_depth_mm = mean(bill_depth_mm, na.rm = T)
) |>
drop_na() |>
ungroup() |>
gt::gt(rowname_col = "species",
groupname_col = "sex") |>
gt::cols_label(
mean_bill_length_mm = html("Mean Bill Length<br>(mm)"),
mean_bill_depth_mm = html("Mean Bill Depth<br>(mm)"),
mean_flipper_length_mm = html("Mean Flipper Length<br>(mm)"),
mean_body_mass_g = html("Mean Weight<br>(g)")
) |>
tab_options(row_group.as_column = TRUE)
penguins |>
group_by(island, sex, species) |>
summarise(
mean_flipper_length_mm = mean(flipper_length_mm, na.rm = T),
mean_body_mass_g = mean(body_mass_g, na.rm = T),
mean_bill_length_mm = mean(bill_length_mm, na.rm = T),
mean_bill_depth_mm = mean(bill_depth_mm, na.rm = T)
) |>
drop_na() |>
ungroup()
penguins |>
group_by(island, sex, species) |>
summarise(
mean_flipper_length_mm = t.test(flipper_length_mm),
mean_body_mass_g = mean(body_mass_g, na.rm = T),
mean_bill_length_mm = mean(bill_length_mm, na.rm = T),
mean_bill_depth_mm = mean(bill_depth_mm, na.rm = T)
) |>
drop_na() |>
ungroup()
penguins |> t.test(flipper_length_mm)
t.test(penguins$flipper_length_mm)
z <- t.test(penguins$flipper_length_mm)
z$conf.int
t.test(penguins$flipper_length_mm)$conf
penguins |>
group_by(island, sex, species) |>
summarise(
mean_flipper_length_mm = t.test(flipper_length_mm)$conf,
mean_body_mass_g = mean(body_mass_g, na.rm = T),
mean_bill_length_mm = mean(bill_length_mm, na.rm = T),
mean_bill_depth_mm = mean(bill_depth_mm, na.rm = T)
) |>
drop_na() |>
ungroup()
penguins |>
group_by(island, sex, species) |>
summarise(
mean_flipper_length_mm = t.test(flipper_length_mm)$conf[1],
mean_body_mass_g = mean(body_mass_g, na.rm = T),
mean_bill_length_mm = mean(bill_length_mm, na.rm = T),
mean_bill_depth_mm = mean(bill_depth_mm, na.rm = T)
) |>
drop_na() |>
ungroup()
penguins |>
group_by(species) |>
summarise(
mean_flipper_length_mm = t.test(flipper_length_mm)$conf[1],
mean_body_mass_g = mean(body_mass_g, na.rm = T),
mean_bill_length_mm = mean(bill_length_mm, na.rm = T),
mean_bill_depth_mm = mean(bill_depth_mm, na.rm = T)
) |>
drop_na() |>
ungroup()
penguins |>
group_by(species) |>
summarise(
mean_flipper_length_mm = t.test(flipper_length_mm)$conf,
mean_body_mass_g = mean(body_mass_g, na.rm = T),
mean_bill_length_mm = mean(bill_length_mm, na.rm = T),
mean_bill_depth_mm = mean(bill_depth_mm, na.rm = T)
) |>
drop_na() |>
ungroup()
tab_spanner()
?tab_spanner
penguins |>
group_by(island, sex, species) |>
summarise(
flipper1 = t.test(flipper_length_mm)$conf[1],
flipper2 = t.test(flipper_length_mm)$conf[2],
body1 = t.test(body_mass_g)$conf[1],
body2 = t.test(body_mass_g)$conf[2],
) |>
drop_na() |>
ungroup() |>
gt::gt(rowname_col = "species",
groupname_col = "sex") |>
tab_spanner(label = "Flipper Length 95% Confidence Interval", columns = c(flipper1, flipper2)) |>
tab_options(row_group.as_column = TRUE)
?t.test
table(penguins$species, penguins$sex)
penguins |>
group_by(sex, species) |>
summarise(
flipper1 = t.test(flipper_length_mm)$conf[1],
flipper2 = t.test(flipper_length_mm)$conf[2],
body1 = t.test(body_mass_g)$conf[1],
body2 = t.test(body_mass_g)$conf[2],
) |>
drop_na() |>
ungroup() |>
gt::gt(rowname_col = "species",
groupname_col = "sex") |>
tab_spanner(label = "Flipper Length 95% Confidence Interval", columns = c(flipper1, flipper2)) |>
tab_options(row_group.as_column = TRUE)
penguins |>
group_by(sex, species) |>
summarise(
flipper1 = t.test(flipper_length_mm)$conf[1],
flipper2 = t.test(flipper_length_mm)$conf[2],
body1 = t.test(body_mass_g)$conf[1],
body2 = t.test(body_mass_g)$conf[2],
) |>
drop_na() |>
ungroup() |>
gt::gt(rowname_col = "species",
groupname_col = "sex") |>
tab_spanner(label = "Flipper Length 95% Confidence Interval", columns = c(flipper1, flipper2)) |>
tab_spanner(label = "Body Weight 95% Confidence Interval", columns = c(body1, body2)) |>
gt::cols_label(
flipper1 = html("Lower (mm)"),
flipper2 = html("Higher (mm)"),
body1 = html("Lower (mm)"),
body2 = html("Higher (mm)")
)
?data_color
library(paletteer)
?info_paletteer
info_paletteer()
colorRampPalette(c("#FFFFFF", "#71196E"))(10)
penguins |>
group_by(sex, species) |>
summarise(
flipper1 = t.test(flipper_length_mm)$conf[1],
flipper2 = t.test(flipper_length_mm)$conf[2],
body1 = t.test(body_mass_g)$conf[1],
body2 = t.test(body_mass_g)$conf[2],
) |>
drop_na() |>
ungroup() |>
gt::gt(rowname_col = "species",
groupname_col = "sex") |>
tab_spanner(label = "Flipper Length 95% Confidence Interval", columns = c(flipper1, flipper2)) |>
tab_spanner(label = "Body Weight 95% Confidence Interval", columns = c(body1, body2)) |>
gt::cols_label(
flipper1 = html("Lower (mm)"),
flipper2 = html("Higher (mm)"),
body1 = html("Lower (mm)"),
body2 = html("Higher (mm)")
) |>
data_color(
columns = c(flipper1, body1),
palette = colorRampPalette(c("#FFFFFF", "#71196E"))(10)
) |>
tab_options(row_group.as_column = TRUE)
penguins |>
group_by(sex, species) |>
summarise(
flipper1 = t.test(flipper_length_mm)$conf[1],
flipper2 = t.test(flipper_length_mm)$conf[2],
body1 = t.test(body_mass_g)$conf[1],
body2 = t.test(body_mass_g)$conf[2],
) |>
drop_na() |>
ungroup() |>
gt::gt(rowname_col = "species",
groupname_col = "sex") |>
tab_spanner(label = "Flipper Length 95% Confidence Interval", columns = c(flipper1, flipper2)) |>
tab_spanner(label = "Body Weight 95% Confidence Interval", columns = c(body1, body2)) |>
gt::cols_label(
flipper1 = html("Lower (mm)"),
flipper2 = html("Higher (mm)"),
body1 = html("Lower (mm)"),
body2 = html("Higher (mm)")
) |>
data_color(
columns = c(flipper1, body1),
palette = colorRampPalette(c("#dbe8bc", "#eeefcf"))(10)
) |>
tab_options(row_group.as_column = TRUE)
penguins |>
group_by(sex, species) |>
summarise(
flipper1 = t.test(flipper_length_mm)$conf[1],
flipper2 = t.test(flipper_length_mm)$conf[2],
body1 = t.test(body_mass_g)$conf[1],
body2 = t.test(body_mass_g)$conf[2],
) |>
drop_na() |>
ungroup() |>
gt::gt(rowname_col = "species",
groupname_col = "sex") |>
tab_spanner(label = "Flipper Length 95% Confidence Interval", columns = c(flipper1, flipper2)) |>
tab_spanner(label = "Body Weight 95% Confidence Interval", columns = c(body1, body2)) |>
gt::cols_label(
flipper1 = html("Lower (mm)"),
flipper2 = html("Higher (mm)"),
body1 = html("Lower (mm)"),
body2 = html("Higher (mm)")
) |>
data_color(
columns = c(flipper1, body1),
palette = colorRampPalette(c("#dbe8bc", "#fff4e0"))(10)
) |>
tab_options(row_group.as_column = TRUE)
penguins |>
group_by(sex, species) |>
summarise(
flipper1 = t.test(flipper_length_mm)$conf[1],
flipper2 = t.test(flipper_length_mm)$conf[2],
body1 = t.test(body_mass_g)$conf[1],
body2 = t.test(body_mass_g)$conf[2],
) |>
drop_na() |>
ungroup() |>
gt::gt(rowname_col = "species",
groupname_col = "sex") |>
tab_spanner(label = "Flipper Length 95% Confidence Interval", columns = c(flipper1, flipper2)) |>
tab_spanner(label = "Body Weight 95% Confidence Interval", columns = c(body1, body2)) |>
gt::cols_label(
flipper1 = html("Lower (mm)"),
flipper2 = html("Higher (mm)"),
body1 = html("Lower (mm)"),
body2 = html("Higher (mm)")
) |>
data_color(
columns = c(flipper1, body1),
palette = colorRampPalette(c("#fff4e0", "#dbe8bc"))(10)
) |>
data_color(
columns = c(flipper2, body2),
palette = colorRampPalette(c("#ffcccb", "#ff817e"))(10)
) |>
tab_options(row_group.as_column = TRUE)
library(ggridges)
?ggridges
?ggridges::geom_density_ridges
penguins |>
ggplot(aes(flipper_length_mm, year)) +
geom_density_ridges()
penguins |>
ggplot(aes(x = flipper_length_mm, y = year)) +
geom_density_ridges()
penguins |>
ggplot(aes(x = flipper_length_mm, y = as.factor(year))) +
geom_density_ridges()
penguins |> t.test(body_mass_g ~ sex)
?t.test
t.test(body_mass_g ~ sex, data = penguins)
t.test(bill_depth_mm ~ sex, data = penguins)
t.test(body_mass_g ~ species, data = penguins |> filter(species != "Gentoo"))
t.test(body_mass_g ~ year, data = penguins |> filter(year != 2008))
penguins |>
ggplot(aes(x = flipper_length_mm, y = as.factor(year))) +
geom_density_ridges() +
theme_minimal()
penguins |>
ggplot(aes(x = flipper_length_mm, y = as.factor(year))) +
geom_density_ridges(alpha = 0.6) +
theme_minimal()
penguins |>
ggplot(aes(x = body_mass_g, y = as.factor(year))) +
geom_density_ridges(alpha = 0.6) +
theme_minimal()
library(showtext)
library(showtext)
font_add("Fuzzy Bubbles", regular = "week-05/assets/ComingSoon-Regular.ttf")
showtext_auto()
theme_clean <- function() {
theme_minimal(base_family = "Fuzzy Bubbles") +
theme(panel.grid.minor = element_blank(),
text = element_text(size = 16, family = "Fuzzy Bubbles"),
plot.background = element_rect(fill = "white", color = NA),
axis.text = element_text(size = 16),
axis.title = element_text(face = "bold", size = 20),
strip.text = element_text(face = "bold", size = rel(0.8), hjust = 0),
strip.background = element_rect(fill = "grey80", color = NA),
legend.text = element_text(size = 16))
}
penguins |>
ggplot(aes(x = body_mass_g, y = as.factor(year))) +
geom_density_ridges(alpha = 0.6) +
theme_minimal()
penguins |>
ggplot(aes(x = body_mass_g, y = as.factor(year))) +
geom_density_ridges(alpha = 0.6) +
theme_clean()
penguins |>
ggplot(aes(x = body_mass_g, y = as.factor(year))) +
geom_density_ridges(alpha = 0.6) +
labs(title = "Penguins don't seem to be getting heavier",
y = "",
x = "Penguin Weight (g)",
caption = "Data from @Palmerpenguins") +
theme_clean()
?font_add
penguins |>
ggplot(aes(species)) +
geom_bar() +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq())) +
geom_bar() +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq())) +
geom_bar() +
labs(x = "", y = "") +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq(), fill = species)) +
geom_bar() +
labs(x = "", y = "") +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq(), fill = species)) +
geom_bar(show.legend = F) +
labs(x = "", y = "") +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq(), fill = species)) +
geom_bar(show.legend = F) +
scale_fill_viridis_c() +
labs(x = "", y = "") +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(species |> fct_infreq(), fill = species)) +
geom_bar(show.legend = F) +
scale_fill_viridis_d() +
labs(x = "", y = "") +
coord_flip() +
theme_clean()
penguins |>
ggplot(aes(x = bill_length_mm, bill_depth_mm, colour = species)) +
geom_point() +
labs(title = "Penguins don't seem to be getting heavier",
y = "",
x = "Penguin Weight (g)",
caption = "Data from @Palmerpenguins") +
theme_clean()
penguins |>
ggplot(aes(x = bill_length_mm, bill_depth_mm, colour = species)) +
geom_point(show.legend = F) +
labs(title = "Penguins don't seem to be getting heavier",
y = "",
x = "Penguin Weight (g)",
caption = "Data from @Palmerpenguins") +
theme_clean()
penguins |>
ggplot(aes(x = bill_length_mm, bill_depth_mm, colour = species)) +
geom_point() +
labs(title = "Penguins don't seem to be getting heavier",
y = "",
x = "Penguin Weight (g)",
caption = "Data from @Palmerpenguins") +
scale_color_viridis_d() +
theme_clean()
penguins |>
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, colour = species)) +
geom_point() +
labs(title = "Adelie Penguins have Short, Deep Bills",
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
caption = "Data from @Palmerpenguins") +
scale_color_viridis_d() +
theme_clean()
penguins |>
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, colour = species)) +
geom_point() +
labs(title = "Adelie Penguins have Short, Deep Bills",
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
caption = "Data from @Palmerpenguins") +
scale_color_viridis_d() +
theme(legend.position = "bottom") +
theme_clean()
?legend.position
penguins |>
ggplot(aes(x = bill_length_mm, y = bill_depth_mm, colour = species)) +
geom_point() +
labs(title = "Adelie Penguins have Short, Deep Bills",
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
caption = "Data from @Palmerpenguins") +
scale_color_viridis_d() +
theme_clean() +
theme(legend.position = "bottom")
library(tidyverse)
library(matlab)
library(tidyverse)
library(matlab)
begin <- 30001
end <- 40000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 31907
end <- 32000
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 30179
end <- 40000
my_step <- 1000
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
begin <- 37109
end <- 37200
my_step <- 10
numbers <- seq(begin, end, by = my_step)
numbers[isprime(numbers)==1]
library(words)
z <- words |>
dplyr::filter(word_length == 5)
z |> filter(str_detect(word, ".anil"))
z |> filter(str_detect(word, ".aive"))
z |> filter(str_detect(word, "s.a.y"))
